/*
* Copyright 2005 neon.jini.org project 
* 
* Licensed under the Apache License, Version 2.0 (the "License"); 
* you may not use this file except in compliance with the License. 
* You may obtain a copy of the License at 
* 
*       http://www.apache.org/licenses/LICENSE-2.0 
* 
* Unless required by applicable law or agreed to in writing, software 
* distributed under the License is distributed on an "AS IS" BASIS, 
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
* See the License for the specific language governing permissions and 
* limitations under the License.
*/


/*
 * AdminConsole.java
 *Created on 22 September 2003, 10:42
 */

package org.jini.projects.neon.ui;

import java.io.Serializable;
import java.rmi.RemoteException;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

import net.jini.lookup.ui.AdminUI;

import org.jini.projects.neon.service.admin.AgentAdmin;
import org.jini.projects.neon.service.admin.AgentDescription;
import org.jini.projects.neon.service.admin.DomainDescription;
/**
 *@author  calum
 */
public class AdminConsole extends JPanel implements AdminUI, Serializable {
	private DefaultMutableTreeNode root = new DefaultMutableTreeNode("Service");
	private DefaultTreeModel dtm = new DefaultTreeModel(root);
	private AgentAdmin svcAdminOb;
	/** Creates new form AdminConsole */
	public AdminConsole() {
		initComponents();
		initModel();
	}

	public AdminConsole(AgentAdmin adminob) {
		this();
		svcAdminOb = adminob;
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	private void initComponents() { //GEN-BEGIN:initComponents
		jPanel1 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTree1 = new javax.swing.JTree();
		jPanel2 = new javax.swing.JPanel();
		jToolBar1 = new javax.swing.JToolBar();
		startButton = new javax.swing.JButton();
		stopButton = new javax.swing.JButton();
		profileButton = new javax.swing.JButton();
		infoButton = new javax.swing.JButton();
		jPanel3 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jPanel4 = new javax.swing.JPanel();

		setLayout(new java.awt.BorderLayout());

		jPanel1.setLayout(new java.awt.BorderLayout());

		jScrollPane1.setPreferredSize(new java.awt.Dimension(159, 131));
		jTree1.setModel(dtm);
		jScrollPane1.setViewportView(jTree1);

		jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

		add(jPanel1, java.awt.BorderLayout.WEST);

		jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

		jToolBar1.setAlignmentX(0.0F);
		jToolBar1.setFont(new java.awt.Font("Dialog", 0, 10));
		startButton.setFont(new java.awt.Font("Dialog", 0, 10));
		startButton.setIcon(new javax.swing.ImageIcon("/home/calum/workspace/Callisto/src/org/callisto/platform/themes/callistoUI/greenbutton.png"));
		startButton.setText("Start");
		startButton.setDisabledIcon(new javax.swing.ImageIcon("/home/calum/workspace/Callisto/src/org/callisto/platform/themes/callistoUI/button1.png"));
		startButton.setRolloverIcon(new javax.swing.ImageIcon("/home/calum/workspace/Callisto/src/org/callisto/platform/themes/callistoUI/button1.png"));
		jToolBar1.add(startButton);

		stopButton.setFont(new java.awt.Font("Dialog", 0, 10));
		stopButton.setIcon(new javax.swing.ImageIcon("/home/calum/workspace/Callisto/src/org/callisto/platform/themes/callistoUI/redbutton.png"));
		stopButton.setText("Stop");
		stopButton.setDisabledIcon(new javax.swing.ImageIcon("/home/calum/workspace/Callisto/src/org/callisto/platform/themes/callistoUI/button1.png"));
		stopButton.setRolloverIcon(new javax.swing.ImageIcon("/home/calum/workspace/Callisto/src/org/callisto/platform/themes/callistoUI/button1.png"));
		stopButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				stopButtonActionPerformed(evt);
			}
		});

		jToolBar1.add(stopButton);

		profileButton.setFont(new java.awt.Font("Dialog", 0, 10));
		profileButton.setIcon(new javax.swing.ImageIcon("/home/calum/workspace/Callisto/src/org/callisto/platform/themes/callistoUI/purplebutton.png"));
		profileButton.setText("Profile");
		profileButton.setDisabledIcon(new javax.swing.ImageIcon("/home/calum/workspace/Callisto/src/org/callisto/platform/themes/callistoUI/button1.png"));
		profileButton.setRolloverIcon(new javax.swing.ImageIcon("/home/calum/workspace/Callisto/src/org/callisto/platform/themes/callistoUI/button1.png"));
		profileButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				profileButtonActionPerformed(evt);
			}
		});

		jToolBar1.add(profileButton);

		infoButton.setFont(new java.awt.Font("Dialog", 0, 10));
		infoButton.setIcon(new javax.swing.ImageIcon("/home/calum/workspace/Callisto/src/org/callisto/platform/themes/callistoUI/button2.png"));
		infoButton.setText("Info");
		infoButton.setDisabledIcon(new javax.swing.ImageIcon("/home/calum/workspace/Callisto/src/org/callisto/platform/themes/callistoUI/button1.png"));
		infoButton.setRolloverIcon(new javax.swing.ImageIcon("/home/calum/workspace/Callisto/src/org/callisto/platform/themes/callistoUI/button1.png"));
		jToolBar1.add(infoButton);

		jPanel2.add(jToolBar1);

		add(jPanel2, java.awt.BorderLayout.NORTH);

		jLabel1.setText("jLabel1");
		jPanel3.add(jLabel1);

		add(jPanel3, java.awt.BorderLayout.SOUTH);

		add(jPanel4, java.awt.BorderLayout.CENTER);

	} //GEN-END:initComponents

	private void profileButtonActionPerformed(java.awt.event.ActionEvent evt) { //GEN-FIRST:event_profileButtonActionPerformed
		// Add your handling code here:
		try {
			this.viewService();
		} catch (RemoteException e) {
			// URGENT Handle RemoteException
			e.printStackTrace();
		}
	} //GEN-LAST:event_profileButtonActionPerformed

	private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) { //GEN-FIRST:event_stopButtonActionPerformed
		// Add your handling code here:
	} //GEN-LAST:event_stopButtonActionPerformed

	/** Exit the Application */
	private void exitForm(java.awt.event.WindowEvent evt) { //GEN-FIRST:event_exitForm
		System.exit(0);
	} //GEN-LAST:event_exitForm

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		JFrame app = new JFrame("Neon Admin Console");
		app.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		app.getContentPane().add(new AdminConsole());
		app.pack();
		app.show();
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton infoButton;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JToolBar jToolBar1;
	private javax.swing.JTree jTree1;
	private javax.swing.JButton profileButton;
	private javax.swing.JButton startButton;
	private javax.swing.JButton stopButton;
	// End of variables declaration//GEN-END:variables

	private void initModel() {
		ServiceConnector conn = new ServiceConnector();
		for (int i = 0; i < conn.getDomains().length; i++) {
			DefaultMutableTreeNode node = new DefaultMutableTreeNode(conn.getDomains()[i]);
			for (int j = 0; j < conn.getAgents("abc").length; j++) {
				DefaultMutableTreeNode agtNode = new DefaultMutableTreeNode(conn.getAgents("abc")[j]);
				node.add(agtNode);
			}
			root.add(node);
		}
	}

	private void viewService() throws RemoteException {
		if (svcAdminOb != null) {

			root.removeAllChildren();
			DomainDescription[] descs = svcAdminOb.getDomains();
			for (int i = 0; i < descs.length; i++) {
				System.out.println("Looking at domain " + i);
				DefaultMutableTreeNode dtm = new DefaultMutableTreeNode(descs[i].getName());
				bindAgentsTo(dtm, descs[i].getAgents());
				root.add(dtm);
				
			}
			//dtm.add(root);
		} else
			JOptionPane.showMessageDialog(null, "Currently not connected");
	}

	private void bindAgentsTo(DefaultMutableTreeNode parent, AgentDescription[] descs) {
		for (int i = 0; i < descs.length; i++) {
			System.out.println("Adding agent " +  i  + " (" + descs[i].getName()  + ")");
			DefaultMutableTreeNode agDesc = new DefaultMutableTreeNode(descs[i].getName());
			agDesc.add(new DefaultMutableTreeNode(descs[i].getIdentity()));
			agDesc.add(new DefaultMutableTreeNode(descs[i].getState()));
			parent.add(agDesc);
		}
	}
}
